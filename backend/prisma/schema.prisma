// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement()) @db.Int
  email        String    @unique @db.VarChar(140)
  password     String    @db.VarChar(50)
  firstName    String    @default("") @db.VarChar(50)
  lastName     String    @default("") @db.VarChar(50)
  grade        String    @default("") @db.VarChar(100)
  imageProfile String    @default("") @db.VarChar(255)
  role         Role      @default(USER)
  post         Post[]
  comment      Comment[]
  like         Like[]
}

enum Role {
  USER
  ADMIN
}

model Post {
  id          Int       @id @default(autoincrement()) @db.Int
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  content     String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  altText     String?   @db.VarChar(255)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  role        Role      @default(USER)
  userId      Int       @db.Int
  commentaire Comment[]
  like        Like[]
}

model Comment {
  id       Int      @id @default(autoincrement()) @db.Int
  content  String   @db.Text
  image    String?  @db.VarChar(255)
  altText  String?  @db.VarChar(255)
  createAt DateTime @default(now())
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role     Role     @default(USER)
  postId   Int      @db.Int
  userId   Int      @db.Int
}

model Like {
  id     Int  @id @default(autoincrement()) @db.Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int  @db.Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @db.Int
}
